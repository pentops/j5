// Code generated by protoc-gen-go-j5. DO NOT EDIT.

package auth_j5pb

import (
	proto "google.golang.org/protobuf/proto"
)

func (msg *Action) Clone() any {
	return proto.Clone(msg).(*Action)
}

// j5.auth.v1 is a J5 schema message, No J5 Methods

func (msg *Fingerprint) Clone() any {
	return proto.Clone(msg).(*Fingerprint)
}

// j5.auth.v1 is a J5 schema message, No J5 Methods

func (msg *Actor) Clone() any {
	return proto.Clone(msg).(*Actor)
}

// j5.auth.v1 is a J5 schema message, No J5 Methods

// AuthenticationMethod is a oneof wrapper
type AuthenticationMethodTypeKey string

const (
	AuthenticationMethod_Type_Jwt      AuthenticationMethodTypeKey = "jwt"
	AuthenticationMethod_Type_Session  AuthenticationMethodTypeKey = "session"
	AuthenticationMethod_Type_External AuthenticationMethodTypeKey = "external"
)

func (x *AuthenticationMethod) TypeKey() (AuthenticationMethodTypeKey, bool) {
	switch x.Type.(type) {
	case *AuthenticationMethod_Jwt:
		return AuthenticationMethod_Type_Jwt, true
	case *AuthenticationMethod_Session_:
		return AuthenticationMethod_Type_Session, true
	case *AuthenticationMethod_External_:
		return AuthenticationMethod_Type_External, true
	default:
		return "", false
	}
}

type IsAuthenticationMethodWrappedType interface {
	TypeKey() AuthenticationMethodTypeKey
	proto.Message
}

func (x *AuthenticationMethod) Set(val IsAuthenticationMethodWrappedType) {
	switch v := val.(type) {
	case *AuthenticationMethod_JWT:
		x.Type = &AuthenticationMethod_Jwt{Jwt: v}
	case *AuthenticationMethod_Session:
		x.Type = &AuthenticationMethod_Session_{Session: v}
	case *AuthenticationMethod_External:
		x.Type = &AuthenticationMethod_External_{External: v}
	}
}
func (x *AuthenticationMethod) Get() IsAuthenticationMethodWrappedType {
	switch v := x.Type.(type) {
	case *AuthenticationMethod_Jwt:
		return v.Jwt
	case *AuthenticationMethod_Session_:
		return v.Session
	case *AuthenticationMethod_External_:
		return v.External
	default:
		return nil
	}
}
func (x *AuthenticationMethod_JWT) TypeKey() AuthenticationMethodTypeKey {
	return AuthenticationMethod_Type_Jwt
}
func (x *AuthenticationMethod_Session) TypeKey() AuthenticationMethodTypeKey {
	return AuthenticationMethod_Type_Session
}
func (x *AuthenticationMethod_External) TypeKey() AuthenticationMethodTypeKey {
	return AuthenticationMethod_Type_External
}
func (msg *AuthenticationMethod) Clone() any {
	return proto.Clone(msg).(*AuthenticationMethod)
}

type IsAuthenticationMethod_Type = isAuthenticationMethod_Type

// j5.auth.v1 is a J5 schema message, No J5 Methods

func (msg *AuthenticationMethod_JWT) Clone() any {
	return proto.Clone(msg).(*AuthenticationMethod_JWT)
}

// j5.auth.v1 is a J5 schema message, No J5 Methods

func (msg *AuthenticationMethod_Session) Clone() any {
	return proto.Clone(msg).(*AuthenticationMethod_Session)
}

// j5.auth.v1 is a J5 schema message, No J5 Methods

func (msg *AuthenticationMethod_External) Clone() any {
	return proto.Clone(msg).(*AuthenticationMethod_External)
}

// j5.auth.v1 is a J5 schema message, No J5 Methods

func (msg *Claim) Clone() any {
	return proto.Clone(msg).(*Claim)
}

// j5.auth.v1 is a J5 schema message, No J5 Methods
