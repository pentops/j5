// Code generated by protoc-gen-go-sugar. DO NOT EDIT.

package source_j5pb

import (
	proto "google.golang.org/protobuf/proto"
)

// ServiceType is a oneof wrapper
type ServiceTypeKey string

const (
	Service_StateEntityQuery   ServiceTypeKey = "stateEntityQuery"
	Service_StateEntityCommand ServiceTypeKey = "stateEntityCommand"
)

func (x *ServiceType) TypeKey() (ServiceTypeKey, bool) {
	switch x.Type.(type) {
	case *ServiceType_StateEntityQuery_:
		return Service_StateEntityQuery, true
	case *ServiceType_StateEntityCommand_:
		return Service_StateEntityCommand, true
	default:
		return "", false
	}
}

type IsServiceTypeWrappedType interface {
	TypeKey() ServiceTypeKey
	proto.Message
}

func (x *ServiceType) Set(val IsServiceTypeWrappedType) {
	switch v := val.(type) {
	case *ServiceType_StateEntityQuery:
		x.Type = &ServiceType_StateEntityQuery_{StateEntityQuery: v}
	case *ServiceType_StateEntityCommand:
		x.Type = &ServiceType_StateEntityCommand_{StateEntityCommand: v}
	}
}
func (x *ServiceType) Get() IsServiceTypeWrappedType {
	switch v := x.Type.(type) {
	case *ServiceType_StateEntityQuery_:
		return v.StateEntityQuery
	case *ServiceType_StateEntityCommand_:
		return v.StateEntityCommand
	default:
		return nil
	}
}
func (x *ServiceType_StateEntityQuery) TypeKey() ServiceTypeKey {
	return Service_StateEntityQuery
}
func (x *ServiceType_StateEntityCommand) TypeKey() ServiceTypeKey {
	return Service_StateEntityCommand
}

type IsServiceType_Type = isServiceType_Type
