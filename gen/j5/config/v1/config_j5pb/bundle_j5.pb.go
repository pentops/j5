// Code generated by protoc-gen-go-j5. DO NOT EDIT.

package config_j5pb

import (
	j5reflect "github.com/pentops/j5/lib/j5reflect"
	proto "google.golang.org/protobuf/proto"
)

func (msg *BundleConfigFile) Clone() any {
	return proto.Clone(msg).(*BundleConfigFile)
}
func (msg *BundleConfigFile) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *BundleConfigFile) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *Include) Clone() any {
	return proto.Clone(msg).(*Include)
}
func (msg *Include) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *Include) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *RegistryConfig) Clone() any {
	return proto.Clone(msg).(*RegistryConfig)
}
func (msg *RegistryConfig) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *RegistryConfig) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *PackageConfig) Clone() any {
	return proto.Clone(msg).(*PackageConfig)
}
func (msg *PackageConfig) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *PackageConfig) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *PublishConfig) Clone() any {
	return proto.Clone(msg).(*PublishConfig)
}
func (msg *PublishConfig) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *PublishConfig) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *PackageOptions) Clone() any {
	return proto.Clone(msg).(*PackageOptions)
}
func (msg *PackageOptions) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *PackageOptions) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *SubPackageType) Clone() any {
	return proto.Clone(msg).(*SubPackageType)
}
func (msg *SubPackageType) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *SubPackageType) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

// OutputType is a oneof wrapper
type OutputTypeKey string

const (
	Output_Type_GoProxy OutputTypeKey = "goProxy"
)

func (x *OutputType) TypeKey() (OutputTypeKey, bool) {
	switch x.Type.(type) {
	case *OutputType_GoProxy_:
		return Output_Type_GoProxy, true
	default:
		return "", false
	}
}

type IsOutputTypeWrappedType interface {
	OutputTypeKey() OutputTypeKey
	proto.Message
}

func (x *OutputType) Set(val IsOutputTypeWrappedType) {
	switch v := val.(type) {
	case *OutputType_GoProxy:
		x.Type = &OutputType_GoProxy_{GoProxy: v}
	}
}
func (x *OutputType) Get() IsOutputTypeWrappedType {
	switch v := x.Type.(type) {
	case *OutputType_GoProxy_:
		return v.GoProxy
	default:
		return nil
	}
}
func (x *OutputType_GoProxy) OutputTypeKey() OutputTypeKey {
	return Output_Type_GoProxy
}
func (msg *OutputType) Clone() any {
	return proto.Clone(msg).(*OutputType)
}

type IsOutputType_Type = isOutputType_Type

func (msg *OutputType) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *OutputType_GoProxy) Clone() any {
	return proto.Clone(msg).(*OutputType_GoProxy)
}
func (msg *OutputType_GoProxy) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *OutputType_GoProxy) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *OutputType_GoProxy_Dep) Clone() any {
	return proto.Clone(msg).(*OutputType_GoProxy_Dep)
}
func (msg *OutputType_GoProxy_Dep) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *OutputType_GoProxy_Dep) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}
