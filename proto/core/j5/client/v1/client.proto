syntax = "proto3";

package j5.client.v1;

import "buf/validate/validate.proto";
import "google/protobuf/timestamp.proto";
import "j5/auth/v1/method.proto";
import "j5/schema/v1/schema.proto";
import "j5/schema/v1/package.proto";
import "j5/ext/v1/annotations.proto";

option go_package = "github.com/pentops/j5/gen/j5/client/v1/client_j5pb";

message API {
  repeated Package packages = 1;
  Metadata metadata = 3;
}

message APISummary {
  repeated PackageSummary packages = 1;
  Metadata metadata = 2;
}

message Metadata {
  google.protobuf.Timestamp built_at = 1;
}

message Package {
  string label = 1;
  string name = 2 [(buf.validate.field).string.pattern = "^([a-z0-9_]+\\.)v[0-9]+$"];

  // markdown formatted prose
  string prose = 3;

  // indicates the package is not a part of the API or bundle, but other
  // packages in the bundle refer to schemas in this package.
  // The package will be a partial representation, only including referenced
  // schemas.
  bool indirect = 4;

  repeated Service services = 5;
  repeated StateEntity state_entities = 6;
  map<string, j5.schema.v1.RootSchema> schemas = 8;

  PackageSource source = 7;
}

message PackageSummary {
  string label = 1;
  string name = 2 [(buf.validate.field).string.pattern = "^([a-z0-9_]+\\.)v[0-9]+$"];
}

message PackageSource {
  string owner = 1 [(buf.validate.field).required = true];
  string repo = 2 [(buf.validate.field).required = true];
  string version = 3 [(buf.validate.field).required = true];
}

message Service {
  string name = 1 [(buf.validate.field).string.pattern = "^[A-Z][a-zA-Z0-9]*$"];
  repeated Method methods = 3;

  repeated string audience = 4;
}

message Method {
  j5.schema.v1.Method method = 1 [(j5.ext.v1.field).object.flatten = true];

  Request request = 6 [(buf.validate.field).required = true];
  j5.schema.v1.Object response_body = 7 [(buf.validate.field).required = true];

  message Request {
    j5.schema.v1.Object body = 1;
    repeated j5.schema.v1.ObjectProperty path_parameters = 2;
    repeated j5.schema.v1.ObjectProperty query_parameters = 3;

    ListRequest list = 4;
  }
}


message ListRequest {
  repeated SearchField searchable_fields = 1;
  repeated SortField sortable_fields = 2;
  repeated FilterField filterable_fields = 3;

  message SortField {
    string name = 1;
    optional Direction default_sort = 2;

    enum Direction {
      DIRECTION_UNSPECIFIED = 0;
      DIRECTION_ASC = 1;
      DIRECTION_DESC = 2;
    }
  }

  message FilterField {
    string name = 1;
    repeated string default_filters = 2;
  }

  message SearchField {
    string name = 1;
  }
}

message StateEntity {
  string name = 1 [(buf.validate.field).string.pattern = "^[A-Z][a-zA-Z0-9_]*$"];

  string full_name = 2 [(buf.validate.field).required = true];

  // an entry in the current package's schema map
  string schema_name = 3 [(buf.validate.field).required = true];

  // markdown formatted prose
  string overview = 4;

  repeated string primary_key = 5;

  Service query_service = 6;

  repeated Service command_services = 7;

  repeated StateEvent events = 8;
}

message StateEvent {
  string name = 1 [(buf.validate.field).string.pattern = "^[a-z][a-z0-9_]+$"];
  string full_name = 2 [(buf.validate.field).required = true];
  string description = 3;
}
