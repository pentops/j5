syntax = "proto3";

package j5.sourcedef.v1;

import "buf/validate/validate.proto";
import "google/protobuf/descriptor.proto";
import "j5/auth/v1/method.proto";
import "j5/bcl/v1/annotations.proto";
import "j5/client/v1/client.proto";
import "j5/ext/v1/annotations.proto";
import "j5/list/v1/annotations.proto";
import "j5/schema/v1/schema.proto";
import "j5/schema/v1/package.proto";

message SourceFile {
  string path = 1;
  Package package = 2;

  repeated Import imports = 4 [(j5.ext.v1.field).array.single_form = "import"];

  repeated RootElement elements = 5;

  j5.bcl.v1.SourceLocation source_locations = 6;
  

  option (j5.bcl.v1.block).alias = {name: "object", path: ["elements", "object"]};
  option (j5.bcl.v1.block).alias = {name: "enum", path: ["elements", "enum"]};
  option (j5.bcl.v1.block).alias = {name: "oneof", path:  ["elements", "oneof"]};
  option (j5.bcl.v1.block).alias = {name: "polymorph", path: ["elements", "polymorph"]};
  option (j5.bcl.v1.block).alias = {name: "entity", path: ["elements", "entity"]};
  option (j5.bcl.v1.block).alias = {name: "service", path: ["elements", "service"]};
  option (j5.bcl.v1.block).alias = {name: "topic", path: ["elements", "topic"]};
}

message Package {
  string name = 1;
}

message Import {
  string path = 1;
  string alias = 2;

  option (j5.bcl.v1.block).name.field_name = "path";
  option (j5.bcl.v1.block).qualifier.field_name = "alias";
}

message RootElement {
  oneof type {
    Entity entity = 4;
    Oneof oneof = 1;
    Object object = 2;
    Polymorph polymorph = 7;
    j5.schema.v1.Enum enum = 3;
    Topic topic = 5;
    Service service = 6;
  }
}

message Entity {
  string name = 1 [(buf.validate.field).string.pattern = "^[A-Z][A-Za-z0-9]+$"];
  string description = 2;
  string base_url_path = 9; // The entire path from the root to the beginning of the entity.

  EntityQuery query = 11;

  repeated j5.schema.v1.Enum.Option status = 4 [(buf.validate.field).required = true];

  repeated EntityKey keys = 3 [(j5.ext.v1.field).array.single_form = "key"];

  repeated j5.schema.v1.ObjectProperty data = 5;

  repeated Event events = 6;

  repeated NestedSchema schemas = 7;

  repeated Service commands = 8 [(j5.ext.v1.field).array.single_form = "command"];

  repeated EntitySummary summaries = 10 [(j5.ext.v1.field).array.single_form = "summary"];


  option (j5.bcl.v1.block).name.field_name = "name";
  option (j5.bcl.v1.block).alias = {name: "key", path: "keys"};
  option (j5.bcl.v1.block).alias = {name: "data", path: "data"};
  option (j5.bcl.v1.block).alias = {name: "status", path: "status"};
  option (j5.bcl.v1.block).alias = {name: "event", path: "events"};
  option (j5.bcl.v1.block).alias = {name: "object", path: ["schemas", "object"]};
  option (j5.bcl.v1.block).alias = {name: "enum", path: ["schemas", "enum"]};
  option (j5.bcl.v1.block).alias = {name: "oneof", path: ["schemas", "oneof"]};
}

message Event {
  j5.schema.v1.Object def = 1 [(j5.ext.v1.field).message.flatten = true];
  
  repeated Transition transitions = 2 [(j5.ext.v1.field).array.single_form = "transition"];

  repeated NestedSchema schemas = 3;
  
  option (j5.bcl.v1.block).description_field = "description";
  option (j5.bcl.v1.block).name.field_name = "name";
  option (j5.bcl.v1.block).alias = {name: "field", path: ["properties"]};
  option (j5.bcl.v1.block).alias = {name: "object", path: ["schemas", "object"]};
}

message Transition {
  // value of a status enum 'ACTIVE', or 'any' for every status
  string from = 1 [(buf.validate.field).required = true];
  // value of a status enum 'ACTIVE', or 'keep' for every status
  string to = 2 [(buf.validate.field).required = true];
}

// transition 0 : created {
//   setState = ACTIVE
// }

message EntityQuery {
  bool events_in_get = 1; // Include events in the query API's GET response

  j5.list.v1.ListRequestMessage list_request = 2;
  j5.list.v1.ListRequestMessage events_list_request = 3;

  repeated string default_status_filter = 4;
  
  j5.auth.v1.MethodAuthType auth = 5;
}

message APIMethod {
  string name = 1 [(buf.validate.field).string.pattern = "^[A-Z][A-Za-z0-9]+$"];
  string http_path = 2;
  string description = 3;

  j5.schema.v1.HTTPMethod http_method = 4 [(buf.validate.field).enum = {
    not_in: 0
    defined_only: true
  }];

  AnonymousObject request = 5 [(buf.validate.field).required = false];
  bool http_request = 12;

  // The response object for the endpoint, when empty indicates a raw http
  // response.
  AnonymousObject response = 6 [(buf.validate.field).required = false];
  bool http_response = 13;

  j5.auth.v1.MethodAuthType auth = 7;
  j5.ext.v1.MethodOptions options = 8;
  j5.list.v1.ListRequestMessage list_request = 9;

  bool paged = 10; // Adds list paging fields to request and response
  bool query = 11; // Adds query field to request
}

message AnonymousObject {
  repeated j5.schema.v1.ObjectProperty properties = 1 [(j5.ext.v1.field).array.single_form = "field"];
}

message Service {
  // Defaults to FooCommand
  optional string name = 1 [(buf.validate.field).string.pattern = "^[A-Z][A-Za-z0-9]+$"];

  optional string base_path = 2; // appended to the entity's base_url_path, defaults to `/c`

  string description = 3;
  repeated APIMethod methods = 4 [(j5.ext.v1.field).array.single_form = "method"];
  j5.ext.v1.ServiceOptions options = 5;
}

// A Topic to publish the entity state as an 'upsert', allowing other services
// to track the state without the full event history.
message EntitySummary {
  string name = 1 [(buf.validate.field).string.pattern = "^[A-Z][A-Za-z0-9]+$"];
  string description = 2;

  repeated j5.schema.v1.ObjectProperty fields = 3 [(j5.ext.v1.field).array.single_form = "field"];
}

message NestedSchema {
  oneof type {
    Oneof oneof = 1;
    Object object = 2;
    j5.schema.v1.Enum enum = 3;
  }
}

message EntityKey {
  j5.schema.v1.ObjectProperty def = 1 [
    (buf.validate.field).required = true,
    (j5.ext.v1.field).message.flatten = true
  ];

  j5.schema.v1.EntityKey key = 2 [(j5.ext.v1.field).message.flatten = true];

  option (j5.bcl.v1.block).type_select = {
    field_name: "schema",
    bang_bool: "required"
    question_bool: "optional"
  };
  option (j5.bcl.v1.block).name.field_name = "name";
  option (j5.bcl.v1.block).alias = {name: "optional", path: "explicitlyOptional"};
}

message Oneof {
  j5.schema.v1.Oneof def = 1 [(j5.ext.v1.field).message.flatten = true];

  repeated NestedSchema schemas = 3;
  
  option (j5.bcl.v1.block).description_field = "description";
  option (j5.bcl.v1.block).name.field_name = "name";
  option (j5.bcl.v1.block).alias = {name: "option", path: ["properties"]};
  option (j5.bcl.v1.block).alias = {name: "object", path: ["schemas", "object"]};
}

message Object {
  j5.schema.v1.Object def = 1 [(j5.ext.v1.field).message.flatten = true];

  repeated NestedSchema schemas = 3;
  
  option (j5.bcl.v1.block).description_field = "description";
  option (j5.bcl.v1.block).name.field_name = "name";
  option (j5.bcl.v1.block).alias = {name: "field", path: ["properties"]};
  option (j5.bcl.v1.block).alias = {name: "object", path: ["schemas", "object"]};
}

message Polymorph {
  j5.schema.v1.Polymorph def = 1 [(j5.ext.v1.field).message.flatten = true];

  // list of other polymorph types
  // The members of the listed types are included in this type.
  repeated string includes = 2; 
  
  option (j5.bcl.v1.block).alias = {name: "member", path: ["members"]};
}

message EntityElement {
  Entity entity = 1 [(j5.ext.v1.field).message.flatten = true];
}

message Topic {
  string name = 1 [(buf.validate.field).string.pattern = "^[A-Z][A-Za-z0-9]+$"];
  string description = 2;

  TopicType type = 3;
  
  option (j5.bcl.v1.block).name.field_name = "name";
  option (j5.bcl.v1.block).type_select.field_name = "type";
}

message TopicType {
  oneof type {
    Publish publish = 1;
    ReqRes reqres = 2;
    Upsert upsert = 3;
    Event event = 4;
  }

  message Publish {
    repeated TopicMethod messages = 1 [(j5.ext.v1.field).array.single_form = "message"];
  }

  message ReqRes {
    repeated TopicMethod request = 2 [(j5.ext.v1.field).array.single_form = "request"];
    repeated TopicMethod reply = 3 [(j5.ext.v1.field).array.single_form = "reply"];
  }

  message Upsert {
    string entity_name = 1;
    TopicMethod message = 2 [(buf.validate.field).required = true];
  }

  message Event {
    string entity_name = 1;
    TopicMethod message = 2 [(buf.validate.field).required = true];
  }
}

message TopicMethod {
  optional string name = 1 [(buf.validate.field).string.pattern = "^[A-Z][A-Za-z0-9]+$"];
  string description = 2;
  repeated j5.schema.v1.ObjectProperty fields = 5 [(j5.ext.v1.field).array.single_form = "field"];
}
