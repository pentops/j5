syntax = "proto3";

package test.schema.v1;

import "google/protobuf/any.proto";
import "google/protobuf/timestamp.proto";
import "j5/ext/v1/annotations.proto";
import "j5/types/any/v1/any.proto";
import "j5/types/date/v1/date.proto";
import "j5/types/decimal/v1/decimal.proto";

option go_package = "github.com/pentops/j5/gen/test/schema/v1/schema_testpb";

message FullSchema {
  string s_string = 1;
  optional string o_string = 2;
  repeated string r_string = 3;

  float s_float = 4;
  optional float o_float = 5;
  repeated float r_float = 6;

  google.protobuf.Timestamp ts = 7;
  repeated google.protobuf.Timestamp r_ts = 8;

  bool s_bool = 9;
  optional bool o_bool = 10;
  repeated bool r_bool = 11;

  int32 s_int32 = 20;
  uint32 s_uint32 = 21;
  sint32 s_sint32 = 22;
  int64 s_int64 = 23;
  uint64 s_uint64 = 24;

  Bar s_bar = 30;
  repeated Bar r_bars = 31;

  Enum enum = 32;
  repeated Enum r_enum = 33;

  bytes s_bytes = 34;
  repeated bytes r_bytes = 35;

  map<string, string> map_string_string = 36;

  map<string, Bar> map_string_bar = 37;

  oneof anon_oneof {
    string a_oneof_string = 100;
    Bar a_oneof_bar = 101;
    float a_oneof_float = 102;
    Enum a_oneof_enum = 103;
  }

  oneof exposed_oneof {
    option (j5.ext.v1.oneof).expose = true;

    string exposed_string = 200;
  }

  WrappedOneof wrapped_oneof = 40;

  repeated WrappedOneof wrapped_oneofs = 41;

  FlattenedMessage flattened = 42 [(j5.ext.v1.field).message.flatten = true];

  NestedExposed nested_exposed_oneof = 43;

  repeated NestedExposed nested_exposed_oneofs = 44;

  ImplicitOneof s_implicit_oneof = 45;
  repeated ImplicitOneof r_implicit_oneofs = 46;

  google.protobuf.Any pbany = 47;

  j5.types.any.v1.Any j5any = 48; /* [(j5.ext.v1.field).any = {
       only_defined: true
       types: [
         "test.schema.v1.Bar",
         "test.schema.v1.Baz",
         "this.does.not.exist.and.that.is.fine"
       ]
     }];
  */
  j5.types.date.v1.Date date = 49;
  repeated j5.types.date.v1.Date r_date = 50;

  j5.types.decimal.v1.Decimal decimal = 51;
  repeated j5.types.decimal.v1.Decimal r_decimal = 52;

  string key_string = 53 [(j5.ext.v1.field).key = {}];
}

message WrappedOneof {
  option (j5.ext.v1.message).is_oneof_wrapper = true;

  oneof type {
    string w_oneof_string = 1;
    Bar w_oneof_bar = 2;
    float w_oneof_float = 3;
    Enum w_oneof_enum = 4;
  }
}

message ImplicitOneof {
  oneof type {
    Bar io_bar = 1;
    Baz io_baz = 2;
  }
}

message NestedExposed {
  oneof type {
    option (j5.ext.v1.oneof).expose = true;
    string de1 = 101;
    string de2 = 102;
    NestedExposed de3 = 103;
  }
}

enum Enum {
  ENUM_UNSPECIFIED = 0;
  ENUM_VALUE1 = 1;
  ENUM_VALUE2 = 2;
}

message Bar {
  string bar_id = 10; // not using 1 or 2 to force any bugs relating to MapEntry which does have fields 1 and 2
  string bar_field = 11;
}

message Baz {
  string baz_id = 1;
}

message FlattenedMessage {
  string field_from_flattened = 1;
  string field_2_from_flattened = 2;
}
